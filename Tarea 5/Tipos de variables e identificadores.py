#       Sistema de Registro de Pacientes
#El programa realiza las siguientes funciones:
#   Solicita al usuario los datos de un paciente.
#   Guarda cada registro en un archivo .csv.
#   Usa variables de distintos tipos (str, int, bool, list, dict).
#   Usa funciones para organizar el c√≥digo.

import csv
import os
#funci√≥n que calcula el √≠ndice de masa corporal
def calcular_imc(peso, estatura):
    return round(peso / (estatura ** 2), 2)

#funci√≥n para registrar al paciente, utiliza variables de tipo int, float
def registrar_paciente():
    nombre = input("Nombre del paciente: ")
    edad = int(input("Edad: "))
    genero = input("G√©nero (M/F): ")
    estatura = float(input("Estatura en metros (ej. 1.75): "))
    peso = float(input("Peso en kilogramos: "))
    sintomas = input("S√≠ntomas (separados por comas): ").split(",")
    asegurado = input("¬øEst√° asegurado? (s/n): ").lower() == 's'

    imc = calcular_imc(peso, estatura) #√≠ndice de masa corporal (imc)

    paciente = {    #creaci√≥n de un diccionario que almacena los datos del paciente
        "Nombre": nombre,
        "Edad": edad,
        "G√©nero": genero,
        "Estatura": estatura,
        "Peso": peso,
        "IMC": imc,
        "S√≠ntomas": ";".join([s.strip() for s in sintomas]),
        "Asegurado": "S√≠" if asegurado else "No"
    }

    return paciente

#funci√≥n que guarda los datos del paciente en un archivo csv
def guardar_paciente_csv(paciente, archivo="pacientes.csv"):
    existe = os.path.exists(archivo)

    with open(archivo, mode="a", newline="", encoding="utf-8") as file:
        campos = ["Nombre", "Edad", "G√©nero", "Estatura", "Peso", "IMC", "S√≠ntomas", "Asegurado"]
        escritor = csv.DictWriter(file, fieldnames=campos)

        if not existe:
            escritor.writeheader()

        escritor.writerow(paciente)
    print("‚úÖ Paciente guardado correctamente.\n")

#funci√≥n que permite mostrar el registro de todos los pacientes
def mostrar_todos(archivo="pacientes.csv"):
    if not os.path.exists(archivo):
        print("‚ùå No hay registros a√∫n.")
        return

    print("\nüìã Lista de pacientes registrados:\n")
    with open(archivo, mode="r", encoding="utf-8") as file:
        lector = csv.DictReader(file)
        for i, fila in enumerate(lector, start=1):
            print(f"{i}. {fila['Nombre']} - Edad: {fila['Edad']} - G√©nero: {fila['G√©nero']} - Asegurado: {fila['Asegurado']}")
            print(f"   Estatura: {fila['Estatura']} m - Peso: {fila['Peso']} kg - IMC: {fila['IMC']}")
            print("   S√≠ntomas:", fila['S√≠ntomas'])
        print()

# Programa principal
while True:
    print("1. Registrar nuevo paciente")
    print("2. Ver todos los pacientes")
    print("3. Salir")
    opcion = input("Seleccione una opci√≥n: ")

    if opcion == "1":
        paciente = registrar_paciente()
        guardar_paciente_csv(paciente)
    elif opcion == "2":
        mostrar_todos()
    elif opcion == "3":
        print("¬°Hasta luego!")
        break
    else:
        print("‚ùó Opci√≥n no v√°lida, intenta nuevamente.\n")
